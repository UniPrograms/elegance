DROP DATABASE IF EXISTS TDW_PROGETTO;
CREATE DATABASE TDW_PROGETTO;
USE TDW_PROGETTO;


/*--------------------- TABLE ---------------------*/

CREATE TABLE `UTENTE` (
    `ID` INT AUTO_INCREMENT PRIMARY KEY,
    `NOME` VARCHAR(100) NOT NULL,
    `COGNOME` VARCHAR(100) NOT NULL,
    `EMAIL` VARCHAR(100) NOT NULL,
    `PASSWORD` VARCHAR(255) NOT NULL,
    `RUOLO` ENUM('UTENTE', 'AMMINISTRATORE'),
    `URL_IMAGE` VARCHAR(512) DEFAULT NULL,
    `NUMERO_TELEFONO` VARCHAR(16) DEFAULT NULL,
    `DATA_REGISTRAZIONE` DATE DEFAULT (CURRENT_DATE),
    UNIQUE (`EMAIL`)
);

CREATE TABLE `PRODUTTORE`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
	`NOME` VARCHAR(100) NOT NULL,
    `LOGO_URL` VARCHAR(512) NOT NULL
);

CREATE TABLE `PAGAMENTO`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
	`NOME` VARCHAR(100) NOT NULL
);

CREATE TABLE `SPEDIZIONE`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
	`NOME` VARCHAR(100) NOT NULL,
    `PREZZO` DOUBLE NOT NULL
);

CREATE TABLE `CATEGORIA`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
	`NOME` VARCHAR(50)
);

CREATE TABLE `SESSO`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
	`SESSO` ENUM('MAN','WOMAN','KID')
);

CREATE TABLE `TAGLIA`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `TAGLIA` ENUM('XS','S','M','L','XL','2XL')
);

CREATE TABLE `PRODOTTO`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `NOME` VARCHAR(256) NOT NULL,
    `PREZZO` DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    `DESCRIZIONE` TEXT NOT NULL,
    `COPERTINA` VARCHAR(512) NOT NULL,
	`ID_PRODUTTORE` INT DEFAULT NULL,
    `ID_CATEGORIA` INT NOT NULL,
    `ID_SESSO` INT NOT NULL,
	FOREIGN KEY (`ID_PRODUTTORE`) REFERENCES `PRODUTTORE`(`ID`) ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (`ID_CATEGORIA`) REFERENCES `CATEGORIA`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`ID_SESSO`) REFERENCES `SESSO`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `COLORE`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `COLORE` ENUM('BLACK','WHITE','RED','BLUE','PINK','YELLOW','ORANGE','GREEN','PURPLE','BROWN','GRAY','BEIGE')
);

CREATE TABLE `ARTICOLO`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `ID_PRODOTTO` INT NOT NULL,
    `ID_TAGLIA` INT NOT NULL,
    `ID_COLORE` INT NOT NULL,
    `QUANTITA` INT DEFAULT 0,
    FOREIGN KEY (`ID_PRODOTTO`) REFERENCES `PRODOTTO`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`ID_TAGLIA`) REFERENCES `TAGLIA`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`ID_COLORE`) REFERENCES `COLORE`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `IMMAGINE`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `NOME` VARCHAR(128) NOT NULL,
    `PATH` VARCHAR(512) NOT NULL,
	`ID_PRODOTTO` INT NOT NULL,
	FOREIGN KEY (`ID_PRODOTTO`) REFERENCES `PRODOTTO`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `CARRELLO`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `ID_UTENTE` INT NOT NULL UNIQUE,
    FOREIGN KEY (`ID_UTENTE`) REFERENCES `UTENTE`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `ITEM_CARRELLO`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `ID_CARRELLO` INT NOT NULL,
    `ID_ARTICOLO` INT NOT NULL,
    FOREIGN KEY (`ID_CARRELLO`) REFERENCES `CARRELLO`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`ID_ARTICOLO`) REFERENCES `ARTICOLO`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `LISTA_DESIDERI`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `ID_UTENTE` INT NOT NULL,
    FOREIGN KEY (`ID_UTENTE`) REFERENCES `UTENTE`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `ITEM_LISTA_DESIDERI`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `ID_LISTA_DESIDERI` INT NOT NULL,
    `ID_ARTICOLO` INT NOT NULL,
    FOREIGN KEY (`ID_LISTA_DESIDERI`) REFERENCES `LISTA_DESIDERI`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`ID_ARTICOLO`) REFERENCES `ARTICOLO`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE(`ID_LISTA_DESIDERI`,`ID_ARTICOLO`)
);

CREATE TABLE `NOTIFICA`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `OGGETTO` VARCHAR(256) NOT NULL,
    `TESTO` TEXT NOT NULL,
    `STATO` ENUM("LETTA","NON_LETTA") NOT NULL DEFAULT "NON_LETTA", 
    `ID_UTENTE` INT NOT NULL,
    `DATE` DATE DEFAULT (CURRENT_DATE),
    FOREIGN KEY (`ID_UTENTE`) REFERENCES `UTENTE`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `INDIRIZZO`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `NAZIONE` VARCHAR(100) NOT NULL,
    `CITTA` VARCHAR(100) NOT NULL,
    `VIA` VARCHAR(100) NOT NULL,
    `CIVICO` VARCHAR(16) NOT NULL,
    `CAP` VARCHAR(16) NOT NULL,
    `NOME` VARCHAR(100) NOT NULL,
	`COGNOME` VARCHAR(100) NOT NULL,
    `NUMERO_TELEFONO` VARCHAR(16) DEFAULT NULL,
    `EMAIL` VARCHAR(128) NOT NULL,
    `PROVINCIA` VARCHAR(10) NOT NULL
);

CREATE TABLE `ORDINE`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `DATA_ORDINE` DATE DEFAULT (CURRENT_DATE),
    `DATA_ARRIVO` DATE DEFAULT NULL,
    `ID_INDIRIZZO` INT NOT NULL,
    `STATO` ENUM("IN_LAVORAZIONE","SPEDITO", "CONSEGNATO") DEFAULT "IN_LAVORAZIONE",
    `ID_UTENTE` INT NOT NULL,
    `ID_PAGAMENTO` INT NOT NULL,
    FOREIGN KEY (`ID_UTENTE`) REFERENCES `UTENTE`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`ID_PAGAMENTO`) REFERENCES `PAGAMENTO`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`ID_INDIRIZZO`) REFERENCES `INDIRIZZO`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE `ORDINE_ARTICOLO`(
	`ID` INT AUTO_INCREMENT PRIMARY KEY,
    `ID_ARTICOLO` INT NOT NULL,
    `ID_ORDINE` INT NOT NULL,
    FOREIGN KEY (`ID_ARTICOLO`) REFERENCES `ARTICOLO`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (`ID_ORDINE`) REFERENCES `ORDINE`(`ID`) ON DELETE CASCADE ON UPDATE CASCADE
);

/*--------------------- VIEW ---------------------*/

-- RESTITUIRE TUTTO PRODOTTO, PRODUTTORE, CATEGORIA, SESSO --
CREATE VIEW PRODOTTO_COMPLETO AS SELECT 
P.ID AS ID_PRODOTTO, P.NOME AS NOME_PRODOTTO, P.PREZZO AS PREZZO_PRODOTTO, P.DESCRIZIONE AS DESCRIZIONE_PRODOTTO, P.COPERTINA AS COPERTINA_PRODOTTO,
PR.ID AS ID_PRODUTTORE, PR.NOME AS NOME_PRODUTTORE,
C.ID AS ID_CATEGORIA, C.NOME AS NOME_CATEGORIA,
S.ID AS ID_SESSO, S.SESSO AS SESSO
FROM PRODOTTO AS P
JOIN CATEGORIA AS C ON C.ID = P.ID_CATEGORIA
JOIN PRODUTTORE AS PR ON PR.ID = P.ID_PRODUTTORE
JOIN SESSO AS S ON S.ID = P.ID_SESSO;

-- RESTITUISCO TUTTO ARTICOLO, TAGLIA, COLORE ---
CREATE VIEW ARTICOLO_COMPLETO AS SELECT
A.ID AS ID_ARTICOLO, A.ID_PRODOTTO AS ID_PRODOTTO, (A.QUANTITA - (SELECT COUNT(*) FROM ITEM_CARRELLO WHERE ID_ARTICOLO = A.ID)) AS QUANTITA,
T.ID AS ID_TAGLIA, T.TAGLIA AS TAGLIA,
C.ID AS ID_COLORE, C.COLORE AS COLORE
FROM ARTICOLO AS A 
JOIN TAGLIA AS T ON T.ID = A.ID_TAGLIA
JOIN COLORE AS C ON C.ID = A.ID_COLORE;


-- RESTITUISCO TUTTO ARTICOLO_COMPLETO, PRODOTTO_COMPLETO --
CREATE VIEW ARTICOLO_PRODOTTO_COMPLETO AS SELECT 
AC.ID_ARTICOLO, AC.QUANTITA, AC.ID_TAGLIA, AC.TAGLIA, AC.ID_COLORE, AC.COLORE,
PC.ID_PRODOTTO, PC.NOME_PRODOTTO, PC.PREZZO_PRODOTTO, PC.DESCRIZIONE_PRODOTTO,
PC.COPERTINA_PRODOTTO, PC.ID_PRODUTTORE, PC.NOME_PRODUTTORE, PC.ID_CATEGORIA,
PC.NOME_CATEGORIA, PC.ID_SESSO, PC.SESSO
FROM ARTICOLO_COMPLETO AS AC
RIGHT JOIN PRODOTTO_COMPLETO AS PC ON PC.ID_PRODOTTO = AC.ID_PRODOTTO;



-- CALCOLA IL PREZZO DEL CARRELLO -- 
CREATE VIEW CARRELLO_COMPLETO AS SELECT
C.*, COALESCE(SUM(AP.PREZZO_PRODOTTO), 0) AS PREZZO_TOTALE
FROM CARRELLO AS C 
LEFT JOIN ITEM_CARRELLO AS IC ON IC.ID_CARRELLO = C.ID 
LEFT JOIN ARTICOLO_PRODOTTO_COMPLETO AS AP ON AP.ID_ARTICOLO = IC.ID_ARTICOLO 
GROUP BY C.ID;



-- CALCOLA IL PREZZO DELL'ORDINE --
CREATE VIEW ORDINE_COMPLETO AS SELECT
O.*, COALESCE(SUM(AP.PREZZO_PRODOTTO), 0) AS PREZZO_TOTALE,
I.NAZIONE AS NAZIONE, I.CITTA AS CITTA, I.VIA AS VIA, I.CIVICO AS CIVICO, I.CAP AS CAP, I.PROVINCIA AS PROVINCIA,
I.NOME AS NOME_DESTINATARIO, I.COGNOME AS COGNOME_DESTINATARIO, I.NUMERO_TELEFONO AS NUMERO_TELEFONO, I.EMAIL AS EMAIL
FROM ORDINE AS O 
LEFT JOIN ORDINE_ARTICOLO AS OA ON OA.ID_ORDINE = O.ID
LEFT JOIN ARTICOLO_PRODOTTO_COMPLETO AS AP ON AP.ID_ARTICOLO = OA.ID_ARTICOLO 
LEFT JOIN INDIRIZZO AS I ON I.ID = O.ID
GROUP BY O.ID;


-- CALCOLA IL NUMERO DI PRODOTTI VENDUTI -- 
CREATE VIEW PRODOTTO_QUANTITA_VENDUTA AS SELECT 
P.*, COUNT(OA.ID) AS QUANTITA_VENDUTA
FROM PRODOTTO AS P
LEFT JOIN ARTICOLO A ON A.ID_PRODOTTO = P.ID 
LEFT JOIN ORDINE_ARTICOLO OA ON OA.ID_ARTICOLO = A.ID 
GROUP BY P.ID ORDER BY P.ID;


-- LISTA DESIDERI COMPLETA -- 
CREATE VIEW LISTA_DESIDERI_COMPLETA AS SELECT 
LD.ID AS ID_LISTA_DESIDERI, LD.ID_UTENTE AS ID_UTENTE,
ILD.ID AS ID_ITEM_LISTA_DESIDERI,
A.ID AS ID_ARTICOLO, A.ID_PRODOTTO AS ID_PRODOTTO, A.ID_TAGLIA AS ID_TAGLIA, A.ID_COLORE AS ID_COLORE
FROM LISTA_DESIDERI AS LD 
JOIN ITEM_LISTA_DESIDERI ILD ON ILD.ID_LISTA_DESIDERI = LD.ID
JOIN ARTICOLO AS A ON A.ID = ILD.ID_ARTICOLO;
